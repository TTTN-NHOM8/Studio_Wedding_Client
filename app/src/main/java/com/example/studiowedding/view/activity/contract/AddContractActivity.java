package com.example.studiowedding.view.activity.contract;

import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.DatePickerDialog;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.PopupMenu;
import android.widget.TextView;


import com.example.studiowedding.R;
import com.example.studiowedding.utils.FormatUtils;
import com.example.studiowedding.view.activity.detail_contract.AddContractDetailActivity;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;

public class AddContractActivity extends AppCompatActivity implements View.OnClickListener {
    private EditText edIdHD,edPaymentStatus,edPickClient,edDateCreate,edDop;
    private TextView tvCreateDetailContract;
    private ImageView imgBack;


    private FormatUtils formatUtils=new FormatUtils();



    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_contract);

        imgBack=findViewById(R.id.imgBackFromAddContract);

        edIdHD=findViewById(R.id.edAddIdContract);
        edPaymentStatus=findViewById(R.id.edPaymentStatus);
        edPickClient=findViewById(R.id.edAddClientContract);
        tvCreateDetailContract=findViewById(R.id.tvCreateDetailContract);
        edDateCreate=findViewById(R.id.edAddDateCreateContract);
        edDop=findViewById(R.id.edAddDOPContract);


        imgBack.setOnClickListener(this);
        edPaymentStatus.setOnClickListener(this);
        edPickClient.setOnClickListener(this);
        tvCreateDetailContract.setOnClickListener(this);
        edDop.setOnClickListener(this);

        autoGenerateIDHD();
        autoGenerateDateCreate();

    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.imgBackFromAddContract:
                finish();
                break;
            case R.id.edPaymentStatus:
                showPopupMenu(view);
                break;
            case R.id.edAddDOPContract:
                try {
                    showDatePicker(edDop);
                } catch (ParseException e) {
                    throw new RuntimeException(e);
                }
                break;
            case R.id.edAddClientContract:
                someActivityResultLauncher.launch(new Intent(this,PickClientActivity.class));
                break;
            case R.id.tvCreateDetailContract:
                someActivityResultLauncher.launch(new Intent(this, AddContractDetailActivity.class));
                break;
        }
    }

//    Popup menu trạng thái thanh toán
    private void showPopupMenu(View v) {
        PopupMenu popupMenu = new PopupMenu(this, v);
        MenuInflater inflater = popupMenu.getMenuInflater();
        inflater.inflate(R.menu.popup_menu_payment_status_contract, popupMenu.getMenu());

        popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
            @Override
            public boolean onMenuItemClick(MenuItem item) {
                switch (item.getItemId()) {
                    case R.id.action_paid:
                        edPaymentStatus.setText("Đã thanh toán");
                        return true;
                    case R.id.action_unpaid:
                        edPaymentStatus.setText("Chưa thanh toán");
                        return true;
                    default:
                        return false;
                }
            }
        });

        popupMenu.show();
    }
//    Tự động tạo mã HD theo thời gian: HD+yyymmddhhmmss
    private void autoGenerateIDHD() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss", Locale.getDefault());
        String currentDateAndTime = sdf.format(new Date());

        String contractID = "HD" + currentDateAndTime;
        edIdHD.setText(contractID);
    }
//    Tự động khởi tạo ngày tạo:dd/MM/yyyy
    private void autoGenerateDateCreate() {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault());
        String currentDateAnd = sdf.format(new Date());
        edDateCreate.setText(currentDateAnd);
    }
//    Dialog date picker
private void showDatePicker(EditText editText) throws ParseException {
    Calendar calendar = Calendar.getInstance();

    if (editText != null && !TextUtils.isEmpty(editText.getText())) {
        Date currentDate = FormatUtils.parserStringToDate(editText.getText().toString());
        if (currentDate != null) {
            calendar.setTime(currentDate);
        }
    }

    DatePickerDialog datePickerDialog = new DatePickerDialog(
            this,
            (view, year, monthOfYear, dayOfMonth) -> {
                calendar.set(Calendar.YEAR, year);
                calendar.set(Calendar.MONTH, monthOfYear);
                calendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);

                String selectedDate = FormatUtils.formatDateToString(calendar.getTime());
                editText.setText(selectedDate);
            },
            calendar.get(Calendar.YEAR),
            calendar.get(Calendar.MONTH),
            calendar.get(Calendar.DAY_OF_MONTH)
    );
    datePickerDialog.show();
}
    private ActivityResultLauncher<Intent> someActivityResultLauncher = registerForActivityResult(
            new ActivityResultContracts.StartActivityForResult(),
            result -> {
                if (result.getResultCode() == Activity.RESULT_OK) {
                    Intent data = result.getData();

                }
            });
}